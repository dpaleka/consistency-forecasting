# -*- coding: utf-8 -*-
"""truth_table_checkers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C6TYSOMFtl-I-j2WpWuvILQ5TocNnkS2
"""

from huggingface_hub import snapshot_download
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, pipeline
import random
import negation_checker
from negation_checker import ask

def random_choice(d):
  return random.choice(list(d.keys()))

HF_MODEL = "hf:meta-llama/Llama-2-7b-chat"


def tt(i):
  result = True
  for _ in range(i):
    t1 = pipeline('generate a statement that you think is absolutely correct, on the topic of '+random_choice(dict))
    t2 = pipeline('generate a statement that you think is absolutely correct, on the topic of '+random_choice(dict))
    temp = (ask("if "+t1+", "+"then "+t2) == 1)
    result = result and temp

  return result

def ff(i):
  result = True
  for _ in range(i):
    t1 = pipeline('generate a statement that you think is absolutely wrong, on the topic of '+random_choice(dict))
    t2 = pipeline('generate a statement that you think is absolutely wrong, on the topic of '+random_choice(dict))
    temp = (ask("if "+t1+", "+"then "+t2) == 1)
    result = result and temp

  return result

def ft(i):
  result = True
  for _ in range(i):
    t1 = pipeline('generate a statement that you think is absolutely wrong, on the topic of '+random_choice(dict))
    t2 = pipeline('generate a statement that you think is absolutely true, on the topic of '+random_choice(dict))
    temp = (ask("if "+t1+", "+"then "+t2) == 1)
    result = result and temp

  return result

def tf(i):
  result = True
  for _ in range(i):
    t1 = pipeline('generate a statement that you think is absolutely true, on the topic of '+random_choice(dict))
    t2 = pipeline('generate a statement that you think is absolutely wrong, on the topic of '+random_choice(dict))
    temp = (ask("if "+t1+", "+"then "+t2) == 0)
    result = result and temp

  return result