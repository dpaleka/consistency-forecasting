{"forecaster_class": "ResolverBasedForecaster", "full_forecaster_config": {"resolver_model": "perplexity/llama-3.1-sonar-large-128k-online", "parsing_model": "gpt-4o-mini-2024-07-18", "n_attempts": 1, "hedging_on_sure": 0.001, "second_forecaster_config": {"model": "perplexity/llama-3.1-sonar-large-128k-online", "prompt": "\nYou are acting as an administrator for a forecasting platform.\nGiven the full data of a forecasting question, you must determine whether the question resolves YES or NO.\nIf YES, your final output should be 1. If NO, your final output should be 0.\n\nToday's date is 15 September 2024 or later. You can search for events that have happened before this date.\nThe question has resolved before your knowledge cutoff date; if there is evidence of a certain event happening, you should be able to find it.\nPlease do not make up events that have not been observed. \n\nIf you are unsure on the resolution of the question, output a probability between 0 and 1 based on your reasoning.\n\nThink everything through step-by-step before coming to a conclusion.\n", "parsing_model": "gpt-4o-mini-2024-07-18", "examples": ["Example(user=ForecastingQuestion(id=UUID('ac778310-cef6-4ac5-9dbd-30bf25369f11'), title='Who will be the Democratic nominee for the 2020 US Presidential Election? (Hillary Clinton)', body='This question will resolve as **Yes** for the candidate below who is selected by the Democratic National Convention as the nominee for the 2020 US Presidential Election.  All other candidates will resolve as **No**.  This question is not restricted to the candidates currently below; other options may be added in the future.\\n\\nFor this question, it is not relevant who recieves the Democratic nomination on the day of the 2020 US election, it is solely determined by who is selected by the delegates of the [Democratic National Convention](https://en.wikipedia.org/wiki/Democratic_National_Convention).', resolution_date=datetime.datetime(2020, 8, 1, 4, 0), question_type='binary', data_source='metaculus', created_date=datetime.datetime(2019, 2, 22, 23, 40, 52), url=None, metadata=None, resolution=None), assistant=\"\\nLet's rephrase the resolution criteria: \\n- The question resolves as **Yes** if Hillary Clinton is selected as the Democratic nominee for the 2020 US Presidential Election;\\n- The question resolves as **No** otherwise.\\n\\nMy search says Joe Biden was selected as the Democratic nominee for the 2020 US Presidential Election.\\nThus, the question resolves as **No**, hence my final output is 0.\\n\")"]}}, "checkers": [{"name": "NegChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/NegChecker.jsonl"}, {"name": "AndChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/AndChecker.jsonl"}, {"name": "OrChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/OrChecker.jsonl"}, {"name": "AndOrChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/AndOrChecker.jsonl"}, {"name": "ButChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/ButChecker.jsonl"}, {"name": "CondChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/CondChecker.jsonl"}, {"name": "ConsequenceChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/ConsequenceChecker.jsonl"}, {"name": "ParaphraseChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/ParaphraseChecker.jsonl"}, {"name": "CondCondChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/CondCondChecker.jsonl"}, {"name": "ExpectedEvidenceChecker", "default_tolerance": 0.01, "frequentist_hparams": {"sigma": 0.05, "gamma": 2.58, "beta": 0.001}, "path": "src/data/tuples_scraped/ExpectedEvidenceChecker.jsonl"}], "is_async": true, "use_threads": false, "run": true, "load_dir": "None", "relevant_checks": ["NegChecker", "AndChecker", "OrChecker", "AndOrChecker", "ButChecker", "CondChecker", "ConsequenceChecker", "ParaphraseChecker", "CondCondChecker", "ExpectedEvidenceChecker"], "tuple_dir": "src/data/tuples_scraped", "num_lines": 200}
