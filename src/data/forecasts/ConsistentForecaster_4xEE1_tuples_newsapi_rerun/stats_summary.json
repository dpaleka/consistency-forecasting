{
    "NegChecker": {
        "error": "1 validation error for Forecast\nprob\n  Value error, Probability must be between 0 and 1. [type=value_error, input_value=1.000000000000001, input_type=float64]\n    For further information visit https://errors.pydantic.dev/2.9/v/value_error"
    },
    "aggregated": {
        "default": {
            "avg_violation": NaN
        },
        "frequentist": {
            "avg_violation": NaN
        },
        "default_scaled": {
            "avg_violation": NaN
        }
    },
    "forecaster": "ConsistentForecaster",
    "full_forecaster_config": {
        "hypocrite": {
            "model": "gpt-4o-mini-2024-07-18",
            "preface": "You are an informed and well-calibrated forecaster. I need you to give me your best probability estimate for the following sentence or question resolving YES. Your answer should be a float between 0 and 1, with nothing else in your response.",
            "examples": []
        },
        "checks": [
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            }
        ],
        "base_data_path": "/home/abhim/consistency-forecasting/src/data/fq/real/questions_cleaned_formatted.jsonl",
        "instantiation_kwargs": {
            "verify_before_instantiation": false,
            "model": "gpt-4o-mini-2024-07-18",
            "cost_log": null,
            "simulate": false
        },
        "bq_func_kwargs": {
            "model": "gpt-4o-mini-2024-07-18",
            "cost_log": null,
            "simulate": false
        },
        "call_kwargs": {}
    }
}{
    "NegChecker": {
        "error": "1 validation error for Forecast\nprob\n  Value error, Probability must be between 0 and 1. [type=value_error, input_value=289187672.9096469, input_type=float64]\n    For further information visit https://errors.pydantic.dev/2.9/v/value_error"
    },
    "aggregated": {
        "default": {
            "avg_violation": NaN
        },
        "frequentist": {
            "avg_violation": NaN
        },
        "default_scaled": {
            "avg_violation": NaN
        }
    },
    "forecaster": "ConsistentForecaster",
    "full_forecaster_config": {
        "hypocrite": {
            "model": "gpt-4o-mini-2024-07-18",
            "preface": "You are an informed and well-calibrated forecaster. I need you to give me your best probability estimate for the following sentence or question resolving YES. Your answer should be a float between 0 and 1, with nothing else in your response.",
            "examples": []
        },
        "checks": [
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            }
        ],
        "base_data_path": "/home/abhim/consistency-forecasting/src/data/fq/real/questions_cleaned_formatted.jsonl",
        "instantiation_kwargs": {
            "verify_before_instantiation": false,
            "model": "gpt-4o-mini-2024-07-18",
            "cost_log": null,
            "simulate": false
        },
        "bq_func_kwargs": {
            "model": "gpt-4o-mini-2024-07-18",
            "cost_log": null,
            "simulate": false
        },
        "call_kwargs": {}
    }
}{
    "NegChecker": {
        "overall": {
            "default": {
                "label": "NegChecker",
                "num_samples_including_errors": 50,
                "num_samples": 50,
                "num_violations": 28,
                "avg_violation": 0.028955,
                "avg_violation_no_outliers": 0.026326,
                "median_violation": 0.011723
            },
            "frequentist": {
                "label": "NegChecker",
                "num_samples_including_errors": 50,
                "num_samples": 50,
                "num_violations": 31,
                "avg_violation": 0.191752,
                "avg_violation_no_outliers": 0.186555,
                "median_violation": 0.153409
            },
            "default_scaled": {
                "label": "NegChecker",
                "num_samples_including_errors": 50,
                "num_samples": 50,
                "num_violations": 28,
                "avg_violation": 0.014477,
                "avg_violation_no_outliers": 0.013163,
                "median_violation": 0.005861
            }
        }
    },
    "aggregated": {
        "default": {
            "avg_violation": 0.028955
        },
        "frequentist": {
            "avg_violation": 0.191752
        },
        "default_scaled": {
            "avg_violation": 0.014477
        }
    },
    "forecaster": "ConsistentForecaster",
    "full_forecaster_config": {
        "hypocrite": {
            "model": "gpt-4o-mini-2024-07-18",
            "preface": "You are an informed and well-calibrated forecaster. I need you to give me your best probability estimate for the following sentence or question resolving YES. Your answer should be a float between 0 and 1, with nothing else in your response.",
            "examples": []
        },
        "checks": [
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            },
            {
                "name": "ExpectedEvidenceChecker",
                "default_tolerance": 0.01,
                "frequentist_hparams": {
                    "sigma": 0.05,
                    "gamma": 2.58,
                    "beta": 0.001
                },
                "path": "/home/abhim/consistency-forecasting/src/data/tuples/ExpectedEvidenceChecker.jsonl"
            }
        ],
        "base_data_path": "/home/abhim/consistency-forecasting/src/data/fq/real/questions_cleaned_formatted.jsonl",
        "instantiation_kwargs": {
            "verify_before_instantiation": false,
            "model": "gpt-4o-mini-2024-07-18",
            "cost_log": null,
            "simulate": false
        },
        "bq_func_kwargs": {
            "model": "gpt-4o-mini-2024-07-18",
            "cost_log": null,
            "simulate": false
        },
        "call_kwargs": {}
    }
}